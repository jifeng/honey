// Generated by CoffeeScript 1.7.1
var e, fs, http, util;

e = require('expect.js');

fs = require('fs');

http = require('http');

util = require('../lib/util');

describe('Util', function() {
  describe('urlFix', function() {
    var cases, urlFix;
    urlFix = util.urlFix;
    cases = [['/hello.js', '/hello.js'], ['/hello.coffee', '/hello.js'], ['/js/hello.js', '/js/hello.js'], ['/hello.css', '/hello.css'], ['/hello.stylus', '/hello.css'], ['/hello.styl', '/hello.css'], ['/css/hello.css', '/css/hello.css'], ['/hello.html', '/hello.html'], ['/hello.htm', '/hello.html'], ['/hello.jade', '/hello.html'], ['/html/hello.html', '/html/hello.html']];
    cases.forEach(function(item) {
      return it(item[0] + ' ==> ' + item[1], function() {
        return e(urlFix(item[0])).to.eql(item[1]);
      });
    });
    return it('jade in module', function() {
      return e(urlFix('/hello.jade', true)).to.be('/hello.jade');
    });
  });
  describe('md5', function() {
    var cases, md5;
    md5 = util.md5;
    cases = [['jifeng.zjd', '56aba81f7fa6b8fad1167b48bd0236f0'], [['jifeng.zjd'], '56aba81f7fa6b8fad1167b48bd0236f0']];
    return cases.forEach(function(item) {
      return it('md5(' + item[0] + ') ==> ' + item[1], function() {
        var value;
        value = md5(item[0]);
        return e(value).to.eql(item[1]);
      });
    });
  });
  return describe('getLocalAddress', function() {
    return it('success', function() {
      var ip;
      ip = util.getLocalAddress();
      return e(ip).to.match(/\d+\.\d+\.\d+\.\d+/);
    });
  });
});
